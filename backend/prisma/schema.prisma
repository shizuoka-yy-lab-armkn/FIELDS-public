datasource db {
  provider = "postgresql"
  url      = env("FIELDS_DATABASE_URL")
}

generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 4
}

model User {
  id       String @id @default(cuid())
  username String @unique
  pw_hash  Bytes

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  records Record[]
}

model Subject {
  id   String @id @default(cuid())
  slug String @unique
  name String

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  actions Action[]
  records Record[]
}

model Action {
  id         String  @id @default(cuid()) // 工程番号ではないので注意
  ord_serial Int // 順序付けに使う連番。1スタートでなくても良いが、飛び飛びの値になってはならない。
  display_no Int     @default(0) // 表示する工程番号。ソート順には関与しない。
  subject_id String
  subject    Subject @relation(fields: [subject_id], references: [id])
  short_name String
  long_name  String

  master_dur_mean Float
  master_dur_std  Float

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  record_segments RecordSegment[]

  @@unique([subject_id, ord_serial])
}

model Record {
  id         String  @id @default(cuid())
  subject_id String
  subject    Subject @relation(fields: [subject_id], references: [id])
  user_id    String
  user       User    @relation(fields: [user_id], references: [id])

  seq Int // (subject_id, user_id) の中で1から順にカウントアップ

  recording_started_at  DateTime
  recording_finished_at DateTime

  forehead_camera_fps               Float
  forehead_camera_prelude_frames    Int    @default(0)
  forehead_camera_total_frames      Int    @default(0)
  forehead_camera_orig_video_path   String
  forehead_camera_public_video_path String

  segments RecordSegment[]

  @@unique([subject_id, user_id, seq])
}

model RecordSegment {
  id        Int    @id @default(autoincrement())
  record_id String
  record    Record @relation(fields: [record_id], references: [id])
  action_id String
  action    Action @relation(fields: [action_id], references: [id])

  begin_frame Int // 開始フレーム (0-indexed)
  end_frame   Int // 終了フレーム (0-indexed); 半開区間なのでこの点は含めない

  tas_likelihood Float @default(0) // TAS (Temporal Action Segmentation) の尤度
}
