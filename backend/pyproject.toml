[tool.poetry]
name = "proficiv"
version = "0.1.0"
description = "Assembly operation proficiency visualizer for YMC"
authors = ["arumakan1727 <33191176+arumakan1727@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"

[[tool.poetry.source]]
name = "torch_cu121"
url = "https://download.pytorch.org/whl/cu121"
priority = "explicit"


[tool.poetry.dependencies]
python = "~3.11"
fastapi = "^0.104.0"
pydantic = "^2.4.2"
pydantic-settings = "^2.0.3"
fire = "^0.5.0"
uvicorn = {extras = ["standard"], version = "^0.23.2"}
stringcase = "^1.2.0"
prisma = "^0.11.0"
aiofiles = "^23.2.1"
torch = [
  {platform = "linux", version = "^2.1.1+cu121", source = "torch_cu121"},
  {platform = "darwin", version = "^2.1.1", source = "pypi"},
]
torchvision = [
  {platform = "linux", version = "^0.16.1+cu121", source = "torch_cu121"},
  {platform = "darwin", version = "^0.16.1", source = "pypi"},
]
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
redis = "^5.0.1"
numpy = "^1.26.2"
opencv-python = "^4.8.1.78"
librosa = "^0.10.1"


[tool.poetry.group.gpu]
optional = true
[tool.poetry.group.gpu.dependencies]
salesforce-lavis = "^1.0.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.2"
pyright = "^1.1.333"
black = "^23.10.1"
isort = "^5.12.0"
pytest = "^7.4.3"


[tool.poetry.group.dev-extra.dependencies]
ipython = "^8.16.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

#------------------ CI tool settings --------------------
[tool.pyright]
exclude = [
  "**/node_modules",
  "**/__pycache__",
  "**/.*",
  "tmp",
  "data",
  "fake_db",
  "static",
]
[tool.isort]
profile = "black"
extend_skip = [
  "tmp",
  "data",
  "fake_db",
  "static",
]

[tool.ruff]
extend-exclude = [
  "tmp",
  "data",
  "fake_db",
  "static",
]
[tool.ruff.lint]
# see: https://docs.astral.sh/ruff/rules/
select = [
  "E",  # pycodestyle (Errors)
  "W",  # pycodestyle (Warnings)
  "F",  # pyflakes
  "N",  # pep8-naming
  "UP", # pyupgrade
  "B",  # bugbear
  "ANN", # flake8-annotations
  "BLE", # flake8-blind-except
  "FBT", # flake8-boolean-trap
  "C4",  # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "T20", # flake8-print
  "TCH", # flake8-type-checking
  "SIM", # flake8-simplify
]
ignore = [
  "ANN101", # missing-type-self
  "ANN102", # missing-type-cls
]
[tool.ruff.lint.per-file-ignores]
"**/cmd/*.py" = ["T201"]  # allow print()

